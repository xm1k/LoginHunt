import re
import telebot
from matplotlib.style.core import available
from telebot import types
from config import TOKEN, yookassa_token, yookassa_shop_id, premium
from pick_logins import main
from yookassa import Payment
from threading import Thread
import yookassa
import json
import os
import asyncio
import queue

yookassa.Configuration.account_id = yookassa_shop_id
yookassa.Configuration.secret_key = yookassa_token

premium_source = "premium.json"
users_queue = queue.Queue()
results = {}
current = []
premium_count = 0

async def process_queue():
    while True:
        global premium_count
        try:
            user_id, usernames, isPremium = users_queue.get()
            if(user_id == -1):
                users_queue.task_done()
            else:
                available_usernames = await main(usernames, isPremium)
                results[user_id] = available_usernames
                if len(available_usernames) == 0:
                    bot.send_message(user_id, f"–ù–µ –Ω–∞—à–ª–æ—Å—å —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ª–æ–≥–∏–Ω–æ–≤...")
                else:
                    bot.send_message(user_id, f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ª–æ–≥–∏–Ω—ã:\n\n" + '\n'.join([f"{i + 1}. {username}" for i, username in enumerate(available_usernames)]))
                if(not isPremium):
                    users_queue.task_done()
                else:
                    premium_count-=1
                current.remove(user_id)
        except Exception as e:
            print(e)
            bot.send_message(user_id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞...")
            users_queue.task_done()


def start_async_loop(loop):
    asyncio.set_event_loop(loop)
    loop.run_until_complete(process_queue())

def load_premium_users():
    if os.path.exists(premium_source):
        with open(premium_source, "r") as f:
            return json.load(f)
    return []

def save_premium_users(users):
    with open(premium_source, "w") as f:
        json.dump(users, f)

def add_premium_user(user_id):
    if user_id not in premium:
        premium.append(int(user_id))
        save_premium_users(premium)

premium = load_premium_users()

def create_payment(amount, description):
    payment = Payment.create({
        "amount": {
            "value": str(amount),
            "currency": "RUB"
        },
        "confirmation": {
            "type": "redirect",
            "return_url": "https://t.me/login_hunt_bot"
        },
        "capture": True,
        "description": description
    })
    return payment

bot = telebot.TeleBot(TOKEN)
cost = 128;

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if(message.chat.id not in premium):
        button1 = types.KeyboardButton("üç™ Cookie")
        button2 = types.KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")
        markup.add(button1, button2)
    else:
        markup.add(types.KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
    bot.send_message(
        message.chat.id,
        """–ü—Ä–∏–≤–µ—Ç!ü§ò –Ø - –±–æ—Ç –ø–æ —Å–µ—Ä—Ñ–∏–Ω–≥—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ–≥–∏–Ω–æ–≤ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º

–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
1. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–æ–≤–æ –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. ‚úèÔ∏è
2. –Ø –ø—Ä–æ–≤–µ—Ä—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ –∏–º–µ–Ω–∏ –≤ Telegram –∏ —Å–æ–æ–±—â—É —Ç–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. üîé
3. –ï—Å–ª–∏ –∏–º—è –∑–∞–Ω—è—Ç–æ, —è –ø–æ–¥–±–µ—Ä—É –ø–æ—Ö–æ–∂–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂—É —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ. üç™

‚ö°Ô∏è –ë—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –±–µ–∑ —É—Å–∏–ª–∏–π!""",
        reply_markup=markup
    )

@bot.message_handler(content_types=['text'])
def handle_text(message):
    if(message.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å"):
        if(message.chat.id in premium):
            bot.send_message(message.chat.id, """üç™ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –ª–æ–≥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ (–¥–æ 5), –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. –Ø –ø–æ—Å–º–æ—Ç—Ä—é, –≥–¥–µ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã üîé""")
        elif(message.chat.id not in premium):
            bot.send_message(message.chat.id, f"""‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å–ª–æ–≤–æ –∏–ª–∏ –ª–æ–≥–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. –Ø –ø–æ—Å–º–æ—Ç—Ä—é, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —ç—Ç–æ—Ç –Ω–∏–∫ –≤ Telegram.
2. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
3. –ü–æ–ª—É—á–∏—Ç–µ 10 –ø–µ—Ä–≤—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ–≥–∏–Ω–æ–≤

‚ùóÔ∏è–í–ê–ñ–ù–û: –í—ã–≤–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏–±–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏–±–æ –∑–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É –ø–æ –ª–æ–≥–∏–Ω—É, cookie –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É

üç™ Cookie —Ñ—É–Ω–∫—Ü–∏–∏:
–î–ª—è cookie-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –õ–æ–≥–∏–Ω—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
- –í—Å–µ –ª–æ–≥–∏–Ω—ã –≤ –≤—ã–≤–æ–¥–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏
- –í—ã–≤–æ–¥ 25 –ø–µ—Ä–≤—ã—Ö –ª–æ–≥–∏–Ω–æ–≤, –≤–º–µ—Å—Ç–æ 10
- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–æ–≥–∏–Ω–æ–≤ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–¥–æ 5)
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü. —Å–µ—Ç—è—Ö

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –ª—é–±–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º ‚Äî —è —Å—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—é –µ–≥–æ –¥–ª—è –≤–∞—Å!""")


    elif(message.text == "üç™ Cookie"):
        markup = types.InlineKeyboardMarkup()
        payment = create_payment(cost, "PREMIUM –ø–æ–¥–ø–∏—Å–∫–∞")
        payment_url = payment.confirmation.confirmation_url
        button1 = types.InlineKeyboardButton("–ö—É–ø–∏—Ç—å üí∞", url=payment_url)
        button2 = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É ‚úÖ", callback_data=f"confirm_{payment.id}_{message.chat.id}")
        markup.add(button1)
        markup.add(button2)
        bot.send_message(message.chat.id, f"""üç™ Cookie status

–î–ª—è cookie-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –õ–æ–≥–∏–Ω—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
- –í—Å–µ –ª–æ–≥–∏–Ω—ã –≤ –≤—ã–≤–æ–¥–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏
- –í—ã–≤–æ–¥ 25 –ø–µ—Ä–≤—ã—Ö –ª–æ–≥–∏–Ω–æ–≤, –≤–º–µ—Å—Ç–æ 10
- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–æ–≥–∏–Ω–æ–≤ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–¥–æ 5)
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü. —Å–µ—Ç—è—Ö

–ö—É–ø–∏—Ç—å COOKIE –Ω–∞–≤—Å–µ–≥–¥–∞ –∑–∞ {cost} RUB üëá""", reply_markup=markup)

    else:
        pattern = r"^[a-zA-Z][a-zA-Z0-9_]{3,8}[a-zA-Z0-9]$"
        alert = """–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ö†Ô∏è
–õ–æ–≥–∏–Ω—ã –º–æ–≥—É—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π 5-10 —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã a-Z, —Ü–∏—Ñ—Ä—ã –∏ –Ω–∏–∂–Ω–∏–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è, –ª–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –±—É–∫–≤—ã –∏ –Ω–µ –º–æ–∂–µ—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ"""
        words = message.text.split(' ')
        if(message.chat.id not in current):
            if(message.chat.id not in premium):
                if(len(words)>1):
                    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–¥–∏–Ω –ª–æ–≥–∏–Ω, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤")
                else:
                    if(re.match(pattern, message.text)):
                        words[0]=words[0].lower()
                        bot.send_message(message.chat.id, f"–ü–æ–∏—Å–∫ {words[0]} üîé\n\n–í–∞—à–µ –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏: {users_queue.qsize()+1}")
                        users_queue.put((message.chat.id, words, message.chat.id in premium))
                        current.append(int(message.chat.id))
                    else:
                        bot.send_message(message.chat.id, alert)
            else:
                if (len(words) > 5):
                    bot.send_message(message.chat.id, "–ù–µ–ª—å–∑—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–æ–ª—å—à–µ 5 –ª–æ–≥–∏–Ω–æ–≤ –∑–∞ 1 —Ä–∞–∑")
                else:
                    f=0
                    good_words=[]
                    unique_words = []
                    seen = set()
                    for word in words:
                        lower_word = word.lower()
                        if lower_word not in seen:
                            seen.add(lower_word)
                            unique_words.append(word)
                    words = unique_words
                    for word in words:
                        word = word.lower()
                        if (not re.match(pattern, word)):
                            if(f==0):
                                bot.send_message(message.chat.id, alert)
                            f=1
                        else:
                            global premium_count
                            users_queue.queue.insert(premium_count, (message.chat.id, [word], message.chat.id in premium))
                            good_words.append(word)
                            current.append(int(message.chat.id))
                            users_queue.put((-1,[], False))
                            premium_count+=1
                    if(len(good_words)>0):
                        bot.send_message(message.chat.id, f"{"–ü–æ–∏—Å–∫:\n"+', '.join(good_words)+' üîé'}")
        else:
            bot.send_message(message.chat.id, f"–í–∞—à –∑–∞–ø—Ä–æ—Å –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è ‚è±")
###

@bot.callback_query_handler(func=lambda call: call.data.startswith("confirm_"))
def handle_confirmation(call):
    payment_id = call.data.split("_")[1]
    markup = types.InlineKeyboardMarkup()
    payment = Payment.find_one(payment_id)
    chat_id = call.data.split("_")[2]
    text = f"""üç™ Cookie —Ñ—É–Ω–∫—Ü–∏–∏:

–î–ª—è cookie-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –õ–æ–≥–∏–Ω—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
- –í—Å–µ –ª–æ–≥–∏–Ω—ã –≤ –≤—ã–≤–æ–¥–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏
- –í—ã–≤–æ–¥ 25 –ø–µ—Ä–≤—ã—Ö –ª–æ–≥–∏–Ω–æ–≤, –≤–º–µ—Å—Ç–æ 10
- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–æ–≥–∏–Ω–æ–≤ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–¥–æ 5)
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü. —Å–µ—Ç—è—Ö

–ö—É–ø–∏—Ç—å COOKIE –Ω–∞–≤—Å–µ–≥–¥–∞ –∑–∞ {cost} RUB üëá"""

    if payment.status == "succeeded":
        add_premium_user(chat_id)
        bot.edit_message_text(chat_id=chat_id,
                              message_id=call.message.message_id,
                              text="""–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! ‚úÖ""", reply_markup=markup)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
        bot.send_message(
            chat_id,"üç™",
            reply_markup=markup
        )
    else:
        payment_url = payment.confirmation.confirmation_url
        button1 = types.InlineKeyboardButton("–ö—É–ø–∏—Ç—å üí∞", url=payment_url)
        button2 = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É ‚ùå",
                                             callback_data=f"confirm_{payment_id}_{chat_id}")
        markup.add(button1)
        markup.add(button2)
        current_text = call.message.reply_markup.keyboard[1][0].text
        if(current_text!=button2.text):
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=call.message.message_id,
                                  text=text, reply_markup=markup)

loop = asyncio.new_event_loop()
thread = Thread(target=start_async_loop, args=(loop,), daemon=True)
thread.start()

bot.polling(none_stop=True)